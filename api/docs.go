// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Luan Baggio",
            "url": "https://github.com/luabagg",
            "email": "luanbaggio0@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health": {
            "get": {
                "description": "Returns a 200 OK response",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "HealthCheck"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/upload": {
            "get": {
                "description": "Returns the file signed URL",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upload"
                ],
                "summary": "Get file URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File prefix",
                        "name": "prefix",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.GetSignedURLResponse"
                        },
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "Request ID (UUID)"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http_utils.RestError"
                        },
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "Request ID (UUID)"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "Request ID (UUID)"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Saves a file in the storage service and sends webhook.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upload"
                ],
                "summary": "File upload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Identifier",
                        "name": "userId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File upload author",
                        "name": "author",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File to be uploaded",
                        "name": "content",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "Webhook-Request-Body": {
                                "type": "object",
                                "description": "views.WebhookPayload{Id:\"X-Request-Id\", Success:true, Location:\"{location}\", Labels:[]string{}, Error:\"\"}"
                            },
                            "X-Request-Id": {
                                "type": "string",
                                "description": "Request ID (UUID)"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http_utils.RestError"
                        },
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "Request ID (UUID)"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "Request ID (UUID)"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the file",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upload"
                ],
                "summary": "Delete file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File prefix",
                        "name": "prefix",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "Request ID (UUID)"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http_utils.RestError"
                        },
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "Request ID (UUID)"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "Request ID (UUID)"
                            }
                        }
                    }
                }
            }
        },
        "/upload/all": {
            "delete": {
                "description": "Deletes all files from prefix",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upload"
                ],
                "summary": "Delete all",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File prefix",
                        "name": "prefix",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "Request ID (UUID)"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http_utils.RestError"
                        },
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "Request ID (UUID)"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "Request ID (UUID)"
                            }
                        }
                    }
                }
            }
        },
        "/upload/folder": {
            "get": {
                "description": "Returns the files signed URLs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upload"
                ],
                "summary": "List files URLs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Folder prefix",
                        "name": "prefix",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/views.GetSignedURLResponse"
                            }
                        },
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "Request ID (UUID)"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http_utils.RestError"
                        },
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "Request ID (UUID)"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "Request ID (UUID)"
                            }
                        }
                    }
                }
            }
        },
        "/upload/list": {
            "post": {
                "description": "Returns the files signed URLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upload"
                ],
                "summary": "List files URLs",
                "parameters": [
                    {
                        "description": "prefixes",
                        "name": "prefixes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/views.ListObjectsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/views.GetSignedURLResponse"
                            }
                        },
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "Request ID (UUID)"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http_utils.RestError"
                        },
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "Request ID (UUID)"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "Request ID (UUID)"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "http_utils.RestError": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "views.GetSignedURLResponse": {
            "type": "object",
            "properties": {
                "expires": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "temporary": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "views.ListObjectsRequest": {
            "type": "object",
            "properties": {
                "prefixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Filepoint",
	Description:      "Filepoint is the Gearpoint's file manager service.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
